name: package
on:
  push:
    tags:
      - '*'
env:
  REPO_NAME: ${{ github.event.repository.name }}
jobs:
  get-version:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: version
        run: |
          export VERSION=$(grep version setup.py | cut -f2 -d "'")
          echo "::set-output name=VERSION::${VERSION}"
    outputs:
      VERSION: ${{ steps.version.outputs.VERSION }}
  pypi:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools 
          pip install wheel twine
      - name: Make tarball
        run: python setup.py sdist
      - name: Make wheel
        run: python setup.py bdist_wheel
      - name: Upload to PyPI.org
        run: twine upload -u __token__ -p ${{ secrets.PYPI_TOKEN }} dist/*
      - name: Give upload time before downloading
        run: sleep 234s
  test-pypi:
    needs: [get-version, pypi]
    runs-on: ubuntu-20.04
    steps:
      - name: Install and test the package
        run: |
          python -m pip install --upgrade pip
          pip install ${REPO_NAME}==${{ needs.get-version.outputs.VERSION }}
          python -m ${REPO_NAME}.tests
  anaconda:
    needs: [get-version, pypi]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Prepare conda
        run: |
          rm -rf ${REPO_NAME}
          conda update conda
          conda install anaconda-client conda-build
      - name: Create conda recipe from PyPI
        run: conda skeleton pypi --noarch-python --version ${{ needs.get-version.outputs.VERSION }} ${REPO_NAME}
      - name: Edit meta.yml
        run: |
          sed -i 's@dev_url:@& \"https://github.com/sandialabs/'${REPO_NAME}'\"@' ${REPO_NAME}/meta.yaml
          sed -i 's@doc_url:@& \"https://'${REPO_NAME}'.readthedocs.io\"@' ${REPO_NAME}/meta.yaml
          cp LICENSE ${REPO_NAME}/LICENSE
          sed -i 's@license_file:@& LICENSE@' ${REPO_NAME}/meta.yaml
          sed -i '/license_file/a \ \ license_url:' ${REPO_NAME}/meta.yaml
          sed -i 's@license_url:@& \"https://github.com/sandialabs/'${REPO_NAME}'/blob/main/LICENSE\"@' ${REPO_NAME}/meta.yaml
          sed -i 's@your-github-id-here@'"${{ secrets.ANACONDA_USERNAME }}"'@' ${REPO_NAME}/meta.yaml
          sed -i "s@license: BSD@license: BSD-3-Clause@" ${REPO_NAME}/meta.yaml
          sudo apt install -y pandoc
          pandoc -s -o README.md README.rst
          sed -e 's/title: //g' -i README.md
          sed -i 's/^/    /' README.md
          sed -i '/summary/a \ \ description: |' ${REPO_NAME}/meta.yaml
          sed -i '/doc_url/e cat README.md' ${REPO_NAME}/meta.yaml
          cat ${REPO_NAME}/meta.yaml
      - name: Build conda packages
        run: conda build --python 3.9 ${REPO_NAME}
      - name: Upload to Anaconda.org
        run: |
          PATH="/usr/share/miniconda/bin/:$PATH"
          anaconda login --username ${{ secrets.ANACONDA_USERNAME }} --password ${{ secrets.ANACONDA_PASSWORD }}
          anaconda upload --force /usr/share/miniconda/conda-bld/noarch/${REPO_NAME}*.tar.bz2
          anaconda logout
      - name: Give upload time before downloading
        run: sleep 234s
  test-anaconda:
    needs: [get-version, anaconda]
    runs-on: ubuntu-20.04
    steps:
      - name: Install the package
        run: conda install --channel mrbuche ${REPO_NAME}==${{ needs.get-version.outputs.VERSION }}
      - name: Test the package
        run: |
          conda init
          conda list
          PATH="/usr/share/miniconda/bin/:$PATH"
          python -c 'import statmechcrack'
          python -m ${REPO_NAME}.tests
  docker:
    needs: [get-version, pypi]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Translate README.rst to .md for description
        run: |
          sudo apt install -y pandoc
          pandoc -s -o README.md README.rst
      - name: Login to DockerHub
        uses: docker/login-action@v1.12.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker and push to Dockerhub
        uses: docker/build-push-action@v2.8.0
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ needs.get-version.outputs.VERSION }}
      - name: Give upload time before downloading
        run: sleep 234s
  test-docker:
    needs: docker
    runs-on: ubuntu-20.04
    container: mrbuche/statmechcrack
    steps:
      - name: Test the package
        run: |
          python -m ${REPO_NAME}.tests
  test-zenodo:
    needs: get-version
    runs-on: ubuntu-20.04
    steps:
      - name: Give upload time before downloading
        run: sleep 234s
      - uses: actions/checkout@v3
      - name: test zenodo
        run: |
          curl https://zenodo.org/record/???????/files/sandialabs/statmechcrack-v${{ needs.get-version.outputs.VERSION }}.zip?download=1 -o clone.zip
          unzip -d clone/ clone.zip
          cd clone/$(ls clone/)
          pip install numpy scipy
          python -m ${REPO_NAME}.tests
